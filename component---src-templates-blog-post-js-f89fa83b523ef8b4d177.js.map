{"version":3,"file":"component---src-templates-blog-post-js-f89fa83b523ef8b4d177.js","mappings":"uNAAMA,EAAQC,EAAQ,MACdC,EAAkBD,EAAQ,MAA1BC,KAEAC,EAAUF,EAAQ,MAAlBE,MAEFC,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KAkCH,OAlCGA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACJC,OAAA,WAEE,IAAMC,EAAaC,KAAKC,MAAlBF,SAKN,OAJIA,GAAYA,EAASG,UAAYH,EAASG,SAAS,KACrDH,EAAWA,EAASG,SAAS,IAG1BH,GAID,oBACE,cACEI,MAAK,iBACAP,GAAO,IADP,CAEHQ,OAAQ,EACRC,eAAgB,OAJpB,oBASA,cACEF,MAAO,CACLC,OAAQ,KAGV,QAACT,EAAD,CAAMW,GAAIP,EAASQ,OAAOC,MAAOT,EAASU,YAAYC,SAExD,iBAAIX,EAASY,UACb,oBArBG,MAyBV,EAlCGd,CAAkBJ,EAAMI,WAqC9B,I,mBClCQe,EAAkBC,IAAAA,OAAVjB,EAAUiB,IAAAA,MAEpBC,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KAgFH,OAhFGA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACJhB,OAAA,WAAU,IAIJiB,EACAC,EALG,OACDC,EAAOjB,KAAKC,MAAMiB,KAAKC,eAK7B,GAAInB,KAAKC,MAAMiB,KAAKC,eAAeZ,OAAOa,SAAU,CAClD,IAAMC,EAAYrB,KAAKC,MAAMiB,KAAKC,eAAeZ,OAAOa,SACxDL,EAAOM,EAAUC,KAAI,SAACC,EAAKC,GACzB,IAAMC,EAAUD,EAAIH,EAAUK,OAAS,IAAK,oBAAO,OACnD,OACE,gBAAMC,IAAKJ,IACT,QAAC,EAAA5B,KAAD,CAAMW,GAAIiB,GACP,EAAKtB,MAAMiB,KAAKC,eAAeV,YAAYM,KAAKS,IAElDC,MAIPT,GACE,cACEb,MAAK,iBACAP,GAAM,IADN,CAEHgC,QAAS,QACTC,aAAcjB,EAAO,MAJzB,eAOeG,GAKnB,OACE,QAAC,IAAD,CAAQe,SAAU9B,KAAKC,MAAM6B,WAC3B,QAACC,EAAA,EAAD,CACErB,MAAK,GAAKO,EAAKR,YAAYC,MAC3BsB,KAAM,CAAC,CAAEC,KAAM,cAAeC,QAASjB,EAAKN,aAE9C,cAAIwB,KAAG,QAAE,CAAEN,aAAcjB,EAAO,EAAI,IAA7B,KAAoCK,EAAKR,YAAYC,QAC5D,aACEP,MAAK,iBACAP,GAAO,EAAI,GADX,CAEHgC,QAAS,WAHb,UAMUX,EAAKR,YAAY2B,OAE3B,eAAKC,wBAAyB,CAAEC,OAAQrB,EAAKsB,QAC5CvB,GACD,cACEb,MAAO,CACL0B,aAAcjB,EAAO,OAGzB,QAAC4B,EAAD,CAAUzC,SAAUkB,EAAKR,YAAYgC,YACrC,aACEtC,MAAO,CACL0B,aAAc,KAGhB,eACEa,IAAKC,EAAAA,EACLC,IAAI,qBACJzC,MAAO,CACL0C,aAAa,OACbC,MAAO,OACPC,YAAanC,EAAO,EAAI,GACxBiB,aAAc,EACdmB,MAAOpC,EAAO,GACdqC,OAAQrC,EAAO,OAGnB,sBAASZ,KAAKC,MAAMiB,KAAKgC,KAAKC,aAAaC,QAjB7C,IAiB+DpD,KAAKC,MAAMiB,KAAKgC,KAAKC,aAAaE,SAjBjG,wDAiBgK,KAC9J,aAAGC,KAAK,uCAAR,8CAMP,EAhFGxC,CAAsBrB,EAAAA,WAmF5B,K,qBC7FA,IAAe,IAA0B","sources":["webpack://blog/./src/components/ReadNext.js","webpack://blog/./src/templates/blog-post.js","webpack://blog/./src/images/kyle-round-small-pantheon.jpg"],"sourcesContent":["const React = require(\"react\")\nconst { Link, graphql } = require(\"gatsby\")\n\nconst { scale } = require(\"../utils/typography\")\n\nclass Component extends React.Component {\n  render() {\n    //console.log(this.props)\n    let { nextPost } = this.props\n    if (nextPost && nextPost.children && nextPost.children[0]) {\n      nextPost = nextPost.children[0]\n    }\n\n    if (!nextPost) {\n      return null\n    } else {\n      return (\n        <div>\n          <h6\n            style={{\n              ...scale(-0.5),\n              margin: 0,\n              letterSpacing: -0.25,\n            }}\n          >\n            READ THIS NEXT:\n          </h6>\n          <h3\n            style={{\n              margin: 0,\n            }}\n          >\n            <Link to={nextPost.fields.slug}>{nextPost.frontmatter.title}</Link>\n          </h3>\n          <p>{nextPost.excerpt}</p>\n          <hr />\n        </div>\n      )\n    }\n  }\n}\n\nexport default Component\n\nexport const query = graphql`\n  fragment ReadNext on MarkdownRemark {\n    fields {\n      slug\n    }\n    excerpt(pruneLength: 200)\n    frontmatter {\n      title\n    }\n  }\n`\n","import React from \"react\"\nimport Helmet from \"react-helmet\"\nimport { Link, graphql } from \"gatsby\"\nimport typography from \"../utils/typography\"\nimport ReadNext from \"../components/ReadNext\"\nimport Layout from \"../layouts/index.js\"\nimport profilePic from \"../images/kyle-round-small-pantheon.jpg\"\n\nconst { rhythm, scale } = typography\n\nclass BlogPostRoute extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    //console.log(post)\n\n    let tags\n    let tagsSection\n    if (this.props.data.markdownRemark.fields.tagSlugs) {\n      const tagsArray = this.props.data.markdownRemark.fields.tagSlugs\n      tags = tagsArray.map((tag, i) => {\n        const divider = i < tagsArray.length - 1 && <span>{\" | \"}</span>\n        return (\n          <span key={tag}>\n            <Link to={tag}>\n              {this.props.data.markdownRemark.frontmatter.tags[i]}\n            </Link>\n            {divider}\n          </span>\n        )\n      })\n      tagsSection = (\n        <em\n          style={{\n            ...scale(-1 / 5),\n            display: \"block\",\n            marginBottom: rhythm(1),\n          }}\n        >\n          Tagged with {tags}\n        </em>\n      )\n    }\n\n    return (\n      <Layout location={this.props.location}>\n        <Helmet\n          title={`${post.frontmatter.title}`}\n          meta={[{ name: \"description\", content: post.excerpt }]}\n        />\n        <h1 css={{ marginBottom: rhythm(1 / 4) }}>{post.frontmatter.title}</h1>\n        <p\n          style={{\n            ...scale(-1 / 4),\n            display: \"block\",\n          }}\n        >\n          Posted {post.frontmatter.date}\n        </p>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        {tagsSection}\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <ReadNext nextPost={post.frontmatter.readNext} />\n        <p\n          style={{\n            marginBottom: 0,\n          }}\n        >\n          <img\n            src={profilePic}\n            alt=\"Kyle's profile pic\"\n            style={{\n              borderRadius: `100%`,\n              float: \"left\",\n              marginRight: rhythm(1 / 4),\n              marginBottom: 0,\n              width: rhythm(2),\n              height: rhythm(2),\n            }}\n          />\n          <strong>{this.props.data.site.siteMetadata.author}</strong> {this.props.data.site.siteMetadata.homeCity}'da  yaşıyor ve okuyor faydalı şeyler yapmak istiyor.{\" \"}\n          <a href=\"https://www.instagram.com/recepbos/\">\n            Beni instagram dan takip edebilirsiniz.\n          </a>\n        </p>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostRoute\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        author\n        homeCity\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      excerpt\n      fields {\n        tagSlugs\n      }\n      frontmatter {\n        title\n        tags\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`\n","export default __webpack_public_path__ + \"static/kyle-round-small-pantheon-17d15dbc2e2de927ddde78df766c2d6b.jpg\";"],"names":["React","require","Link","scale","Component","render","nextPost","this","props","children","style","margin","letterSpacing","to","fields","slug","frontmatter","title","excerpt","rhythm","typography","BlogPostRoute","tags","tagsSection","post","data","markdownRemark","tagSlugs","tagsArray","map","tag","i","divider","length","key","display","marginBottom","location","Helmet","meta","name","content","css","date","dangerouslySetInnerHTML","__html","html","ReadNext","readNext","src","profilePic","alt","borderRadius","float","marginRight","width","height","site","siteMetadata","author","homeCity","href"],"sourceRoot":""}